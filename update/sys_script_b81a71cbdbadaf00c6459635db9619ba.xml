<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_brig3_deployment_deployment_task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_brig3_deployment_deployment_task">assigned_toVALCHANGES^EQ<item endquery="false" field="assigned_to" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Hikon - Book / Release Engineer - user</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var currentEngineer = current.assigned_to;
	if (currentEngineer != '' && previous.assigned_to != '') {
		if (currentEngineer != previous.assigned_to)
			removeEngineer();
		bookEngineer(currentEngineer);
	}
	else if (currentEngineer == '' && previous.assigned_to != '') {
		removeEngineer();
	}
	
	function bookEngineer(currentEngineer){
		var freeEngineer = new GlideRecord('x_brig3_deployment_deployment_resource');
		freeEngineer.addQuery('engineer',currentEngineer);
		freeEngineer.addQuery('start_date',current.expected_start);
		freeEngineer.addQuery('environment',current.environment);
		freeEngineer.query();
		
		if (freeEngineer.next()) {
			if (freeEngineer.state != 'Free') {
				gs.addErrorMessage('The Engineer is already booked at that time');
				current.setAbortAction(true);
				return false;// Make sure the engineer is free
			}
			else {
				freeEngineer.task = current.sys_id;
				current.resource_record = freeEngineer.sys_id;
				if (current.state == 10)
					freeEngineer.state = 'Requested';
				if (current.state == 20)
					freeEngineer.state = 'Booked';
				freeEngineer.update();
			}
		}
	}
	
	function removeEngineer(){
		var freeEngineer = new GlideRecord('x_brig3_deployment_deployment_resource');
		freeEngineer.addQuery('task',current.sys_id);
		freeEngineer.query();
		
		if (freeEngineer.next()) {
			freeEngineer.task = '';
			freeEngineer.state = 'Free';
			freeEngineer.update();
		}
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>fge.shay</sys_created_by>
        <sys_created_on>2018-11-08 00:45:27</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b81a71cbdbadaf00c6459635db9619ba</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Hikon - Book / Release Engineer - user</sys_name>
        <sys_overrides/>
        <sys_package display_value="Deployment Requests" source="x_brig3_deployment">0f893c49db29a340342ef3571d9619d4</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Deployment Requests">0f893c49db29a340342ef3571d9619d4</sys_scope>
        <sys_update_name>sys_script_b81a71cbdbadaf00c6459635db9619ba</sys_update_name>
        <sys_updated_by>fge.shay</sys_updated_by>
        <sys_updated_on>2018-11-10 18:14:14</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b81a71cbdbadaf00c6459635db9619ba"/>
</record_update>
